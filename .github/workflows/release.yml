name: 🎉 Release Publisher

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get tag name
        id: tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Install adapter-static
        run: bun add -D @sveltejs/adapter-static
      
      - name: Backup original config and create static build config
        run: |
          # Backup original config
          mv svelte.config.js svelte.config.js.bak
          
          # Create static build config
          cat > svelte.config.js << 'EOF'
          import adapter from '@sveltejs/adapter-static';
          import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';

          const config = {
            preprocess: vitePreprocess(),
            kit: { 
              adapter: adapter({
                pages: 'build',
                assets: 'build',
                fallback: 'index.html',
                precompress: false,
                strict: false
              })
            }
          };

          export default config;
          EOF
          
          # Enable prerendering for static build
          echo "export const prerender = true;" > src/routes/+layout.js
      
      - name: Build project with static adapter
        run: bun run build
      
      - name: Restore original config
        run: |
          mv svelte.config.js.bak svelte.config.js
          rm -f src/routes/+layout.js
      
      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREVIOUS_TAG=$(git tag --sort=-creatordate | grep -v "^${{ steps.tag.outputs.TAG_NAME }}$" | head -n 1)
          
          if [ -z "$PREVIOUS_TAG" ]; then
            # First release - get all commits from first commit
            FIRST_COMMIT=$(git rev-list --max-parents=0 HEAD)
            COMMITS=$(git log ${FIRST_COMMIT}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          else
            # Subsequent release - get commits since last tag
            COMMITS=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Save changelog to file
          {
            echo "CHANGELOG<<EOF"
            echo "$COMMITS"
            echo "EOF"
          } >> $GITHUB_OUTPUT
      
      - name: Create release package
        run: |
          # Create package directory
          mkdir -p release-package
          
          # Copy build artifacts
          cp -r build release-package/
          cp package.json release-package/
          cp README.md release-package/
          cp LICENSE.md release-package/
          
          # Create zip file
          cd release-package
          zip -r ../bmi-stellar-edition-${{ steps.tag.outputs.TAG_NAME }}.zip .
          cd ..
          
          # Generate SHA256 checksum
          sha256sum bmi-stellar-edition-${{ steps.tag.outputs.TAG_NAME }}.zip > bmi-stellar-edition-${{ steps.tag.outputs.TAG_NAME }}.zip.sha256
      
      - name: Create release notes
        id: release_notes
        run: |
          {
            echo "NOTES<<EOF"
            echo "# BMI Calculator Stellar Edition - Release ${{ steps.tag.outputs.TAG_NAME }}"
            echo ""
            echo "## 🎉 What's New"
            echo ""
            echo "This release includes the latest improvements, bug fixes, and feature enhancements for the BMI Calculator Stellar Edition."
            echo ""
            echo "## 📦 Installation"
            echo ""
            echo "Download the package below and extract it to your desired location:"
            echo ""
            echo "\`\`\`bash"
            echo "# Extract the package"
            echo "unzip bmi-stellar-edition-${{ steps.tag.outputs.TAG_NAME }}.zip -d bmi-calculator"
            echo ""
            echo "# Install dependencies"
            echo "cd bmi-calculator"
            echo "bun install"
            echo ""
            echo "# Start the application"
            echo "bun run preview"
            echo "\`\`\`"
            echo ""
            echo "## 📋 Changelog"
            echo ""
            echo "${{ steps.changelog.outputs.CHANGELOG }}"
            echo ""
            echo "## 🔒 Security"
            echo ""
            echo "### Package Verification"
            echo ""
            echo "Verify the integrity of the downloaded package using SHA256:"
            echo ""
            echo "\`\`\`bash"
            echo "sha256sum -c bmi-stellar-edition-${{ steps.tag.outputs.TAG_NAME }}.zip.sha256"
            echo "\`\`\`"
            echo ""
            echo "## 📄 License"
            echo ""
            echo "This project is licensed under the GPL v3 License. See the [LICENSE.md](LICENSE.md) file for details."
            echo ""
            echo "## 🙏 Acknowledgments"
            echo ""
            echo "Thank you to all contributors and users who made this release possible!"
            echo ""
            echo "---"
            echo ""
            echo "**Built with:** SvelteKit + TypeScript + Vite"
            echo "**Team:** LOGIGO"
            echo "EOF"
          } >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: BMI Stellar Edition ${{ steps.tag.outputs.TAG_NAME }}
          body: ${{ steps.release_notes.outputs.NOTES }}
          files: |
            bmi-stellar-edition-${{ steps.tag.outputs.TAG_NAME }}.zip
            bmi-stellar-edition-${{ steps.tag.outputs.TAG_NAME }}.zip.sha256
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
